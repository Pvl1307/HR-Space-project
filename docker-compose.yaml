version: '3'

services:

  redis:
    image: redis:7.2.3
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3


  db:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $DB_USER' ]
      interval: 10s
      timeout: 5s
      retries: 5


  web:
    image: web
    tty: true
    command: sh -c 'python manage.py migrate && python manage.py loaddata user_data.json rh_kosmos_data.json blog_data.json && python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/code
    ports:
      - '8000:8000'

    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - web
      - db
    healthcheck:
      test: [ "CMD", "celery", "inspect", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3


  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - web
      - celery


volumes:
  pg_data: